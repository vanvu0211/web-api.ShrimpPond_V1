name: CI/CD Pipeline for ShrimpPond.Host

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List directory contents
        run: dir

      - name: List ShrimpPond.Host contents
        run: dir ShrimpPond.Host

      - name: Verify ShrimpPond.Host directory
        run: cd ShrimpPond.Host && dir

      - name: Restore dependencies
        run: dotnet restore ShrimpPond_CleanArchitecture.sln

      - name: Build ShrimpPond.Host
        run: dotnet build ShrimpPond.Host/ShrimpPond.Host.csproj --configuration Release --no-restore

      - name: Clean publish directory
        run: if (Test-Path ./publish) { Remove-Item -Recurse -Force ./publish }
        shell: pwsh

      - name: Publish ShrimpPond.Host
        run: dotnet publish ShrimpPond.Host/ShrimpPond.Host.csproj --configuration Release --output ./publish --no-build --no-restore --no-dependencies

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: shrimppond-host-app-${{ github.run_number }}
          path: ./publish/

  deploy:
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shrimppond-host-app-${{ github.run_number }}
          path: ./publish/

      - name: Deploy to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          source: "./publish/*"
          target: "C:/ShrimpPond/Host"

      - name: Restart service on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            if (Get-Service -Name ShrimpPondHostService -ErrorAction SilentlyContinue) {
              Restart-Service -Name ShrimpPondHostService -ErrorAction SilentlyContinue
            } else {
              Write-Host "Service ShrimpPondHostService not found, please start manually."
            }
          shell: pwsh